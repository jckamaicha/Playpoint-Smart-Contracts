{
	"id": "b12b30dd903749c3b52193e4ca7cf690",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Faucet.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\";\n\ncontract PlaypointFaucet{\n    IERC20 public PPTTToken;\n    mapping(address => uint8) public users;\n    bool internal locked;\n\n    constructor(address _token){\n        PPTTToken = IERC20(_token);\n    }\n\n    modifier reentrancyGuard() {\n        require(!locked);\n        locked = true;\n        _;\n        locked = false;\n    }\n\n    modifier _checkRequest(address _user) {\n        require(users[_user] != 1, \"User has already request limited PPTT Token!\");\n        _;\n    }\n\n    function requestPPTT() _checkRequest(msg.sender) reentrancyGuard public returns (uint8){\n        PPTTToken.transfer(msg.sender, 500000000000000000000000);\n        users[msg.sender] = 1;\n        return 1;\n    }\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Faucet.sol": {
				"PlaypointFaucet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "PPTTToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestPPTT",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "users",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Faucet.sol\":167:854  contract PlaypointFaucet{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Faucet.sol\":297:367  constructor(address _token){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Faucet.sol\":353:359  _token */\n  dup1\n    /* \"contracts/Faucet.sol\":334:343  PPTTToken */\n  0x00\n  dup1\n    /* \"contracts/Faucet.sol\":334:360  PPTTToken = IERC20(_token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Faucet.sol\":297:367  constructor(address _token){... */\n  pop\n    /* \"contracts/Faucet.sol\":167:854  contract PlaypointFaucet{... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":243:362   */\ntag_13:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_16\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:690   */\ntag_19:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:684   */\n  tag_21\n    /* \"#utility.yul\":678:683   */\n  dup3\n    /* \"#utility.yul\":660:684   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":649:684   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:690   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:822   */\ntag_22:\n    /* \"#utility.yul\":733:740   */\n  0x00\n    /* \"#utility.yul\":773:815   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":766:771   */\n  dup3\n    /* \"#utility.yul\":762:816   */\n  and\n    /* \"#utility.yul\":751:816   */\n  swap1\n  pop\n    /* \"#utility.yul\":696:822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":951:1068   */\ntag_15:\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1074:1196   */\ntag_11:\n    /* \"#utility.yul\":1147:1171   */\n  tag_28\n    /* \"#utility.yul\":1165:1170   */\n  dup2\n    /* \"#utility.yul\":1147:1171   */\n  tag_19\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1140:1145   */\n  dup2\n    /* \"#utility.yul\":1137:1172   */\n  eq\n    /* \"#utility.yul\":1127:1190   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1186:1187   */\n  0x00\n    /* \"#utility.yul\":1183:1184   */\n  dup1\n    /* \"#utility.yul\":1176:1188   */\n  revert\n    /* \"#utility.yul\":1127:1190   */\ntag_29:\n    /* \"#utility.yul\":1074:1196   */\n  pop\n  jump\t// out\n    /* \"contracts/Faucet.sol\":167:854  contract PlaypointFaucet{... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Faucet.sol\":167:854  contract PlaypointFaucet{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x44e83453\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7517eae9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa87430ba\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Faucet.sol\":643:852  function requestPPTT() _checkRequest(msg.sender) reentrancyGuard public returns (uint8){... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Faucet.sol\":197:220  IERC20 public PPTTToken */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Faucet.sol\":226:264  mapping(address => uint8) public users */\n    tag_5:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Faucet.sol\":643:852  function requestPPTT() _checkRequest(msg.sender) reentrancyGuard public returns (uint8){... */\n    tag_7:\n        /* \"contracts/Faucet.sol\":724:729  uint8 */\n      0x00\n        /* \"contracts/Faucet.sol\":680:690  msg.sender */\n      caller\n        /* \"contracts/Faucet.sol\":569:570  1 */\n      0x01\n        /* \"contracts/Faucet.sol\":553:558  users */\n      dup1\n        /* \"contracts/Faucet.sol\":553:565  users[_user] */\n      0x00\n        /* \"contracts/Faucet.sol\":559:564  _user */\n      dup4\n        /* \"contracts/Faucet.sol\":553:565  users[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Faucet.sol\":553:570  users[_user] != 1 */\n      0xff\n      and\n      eq\n      iszero\n        /* \"contracts/Faucet.sol\":545:619  require(users[_user] != 1, \"User has already request limited PPTT Token!\") */\n      tag_20\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_21\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_20:\n        /* \"contracts/Faucet.sol\":419:425  locked */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Faucet.sol\":418:425  !locked */\n      iszero\n        /* \"contracts/Faucet.sol\":410:426  require(!locked) */\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n        /* \"contracts/Faucet.sol\":445:449  true */\n      0x01\n        /* \"contracts/Faucet.sol\":436:442  locked */\n      0x02\n      0x00\n        /* \"contracts/Faucet.sol\":436:449  locked = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Faucet.sol\":740:749  PPTTToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Faucet.sol\":740:758  PPTTToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Faucet.sol\":759:769  msg.sender */\n      caller\n        /* \"contracts/Faucet.sol\":771:795  500000000000000000000000 */\n      0x69e10de76676d0800000\n        /* \"contracts/Faucet.sol\":740:796  PPTTToken.transfer(msg.sender, 500000000000000000000000) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_26\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_30\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      pop\n        /* \"contracts/Faucet.sol\":826:827  1 */\n      0x01\n        /* \"contracts/Faucet.sol\":806:811  users */\n      dup1\n        /* \"contracts/Faucet.sol\":806:823  users[msg.sender] */\n      0x00\n        /* \"contracts/Faucet.sol\":812:822  msg.sender */\n      caller\n        /* \"contracts/Faucet.sol\":806:823  users[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Faucet.sol\":806:827  users[msg.sender] = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Faucet.sol\":844:845  1 */\n      0x01\n        /* \"contracts/Faucet.sol\":837:845  return 1 */\n      swap2\n      pop\n        /* \"contracts/Faucet.sol\":479:484  false */\n      0x00\n        /* \"contracts/Faucet.sol\":470:476  locked */\n      0x02\n      0x00\n        /* \"contracts/Faucet.sol\":470:484  locked = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Faucet.sol\":643:852  function requestPPTT() _checkRequest(msg.sender) reentrancyGuard public returns (uint8){... */\n      pop\n      swap1\n      jump\t// out\n        /* \"contracts/Faucet.sol\":197:220  IERC20 public PPTTToken */\n    tag_11:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Faucet.sol\":226:264  mapping(address => uint8) public users */\n    tag_17:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_34:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_36\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_38:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_40\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:624   */\n    tag_16:\n        /* \"#utility.yul\":354:360   */\n      0x00\n        /* \"#utility.yul\":403:405   */\n      0x20\n        /* \"#utility.yul\":391:400   */\n      dup3\n        /* \"#utility.yul\":382:389   */\n      dup5\n        /* \"#utility.yul\":378:401   */\n      sub\n        /* \"#utility.yul\":374:406   */\n      slt\n        /* \"#utility.yul\":371:490   */\n      iszero\n      tag_43\n      jumpi\n        /* \"#utility.yul\":409:488   */\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":371:490   */\n    tag_43:\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":554:607   */\n      tag_46\n        /* \"#utility.yul\":599:606   */\n      dup5\n        /* \"#utility.yul\":590:596   */\n      dup3\n        /* \"#utility.yul\":579:588   */\n      dup6\n        /* \"#utility.yul\":575:597   */\n      add\n        /* \"#utility.yul\":554:607   */\n      tag_34\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":544:607   */\n      swap2\n      pop\n        /* \"#utility.yul\":500:617   */\n      pop\n        /* \"#utility.yul\":295:624   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":630:975   */\n    tag_32:\n        /* \"#utility.yul\":697:703   */\n      0x00\n        /* \"#utility.yul\":746:748   */\n      0x20\n        /* \"#utility.yul\":734:743   */\n      dup3\n        /* \"#utility.yul\":725:732   */\n      dup5\n        /* \"#utility.yul\":721:744   */\n      sub\n        /* \"#utility.yul\":717:749   */\n      slt\n        /* \"#utility.yul\":714:833   */\n      iszero\n      tag_48\n      jumpi\n        /* \"#utility.yul\":752:831   */\n      tag_49\n      tag_45\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":714:833   */\n    tag_48:\n        /* \"#utility.yul\":872:873   */\n      0x00\n        /* \"#utility.yul\":897:958   */\n      tag_50\n        /* \"#utility.yul\":950:957   */\n      dup5\n        /* \"#utility.yul\":941:947   */\n      dup3\n        /* \"#utility.yul\":930:939   */\n      dup6\n        /* \"#utility.yul\":926:948   */\n      add\n        /* \"#utility.yul\":897:958   */\n      tag_38\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":887:958   */\n      swap2\n      pop\n        /* \"#utility.yul\":843:968   */\n      pop\n        /* \"#utility.yul\":630:975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":981:1099   */\n    tag_51:\n        /* \"#utility.yul\":1068:1092   */\n      tag_53\n        /* \"#utility.yul\":1086:1091   */\n      dup2\n        /* \"#utility.yul\":1068:1092   */\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1063:1066   */\n      dup3\n        /* \"#utility.yul\":1056:1093   */\n      mstore\n        /* \"#utility.yul\":981:1099   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1105:1264   */\n    tag_55:\n        /* \"#utility.yul\":1206:1257   */\n      tag_57\n        /* \"#utility.yul\":1251:1256   */\n      dup2\n        /* \"#utility.yul\":1206:1257   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1201:1204   */\n      dup3\n        /* \"#utility.yul\":1194:1258   */\n      mstore\n        /* \"#utility.yul\":1105:1264   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1270:1463   */\n    tag_59:\n        /* \"#utility.yul\":1388:1456   */\n      tag_61\n        /* \"#utility.yul\":1450:1455   */\n      dup2\n        /* \"#utility.yul\":1388:1456   */\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1383:1386   */\n      dup3\n        /* \"#utility.yul\":1376:1457   */\n      mstore\n        /* \"#utility.yul\":1270:1463   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1469:1835   */\n    tag_63:\n        /* \"#utility.yul\":1611:1614   */\n      0x00\n        /* \"#utility.yul\":1632:1699   */\n      tag_65\n        /* \"#utility.yul\":1696:1698   */\n      0x2c\n        /* \"#utility.yul\":1691:1694   */\n      dup4\n        /* \"#utility.yul\":1632:1699   */\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1625:1699   */\n      swap2\n      pop\n        /* \"#utility.yul\":1708:1801   */\n      tag_67\n        /* \"#utility.yul\":1797:1800   */\n      dup3\n        /* \"#utility.yul\":1708:1801   */\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1826:1828   */\n      0x40\n        /* \"#utility.yul\":1821:1824   */\n      dup3\n        /* \"#utility.yul\":1817:1829   */\n      add\n        /* \"#utility.yul\":1810:1829   */\n      swap1\n      pop\n        /* \"#utility.yul\":1469:1835   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1841:1953   */\n    tag_69:\n        /* \"#utility.yul\":1924:1946   */\n      tag_71\n        /* \"#utility.yul\":1940:1945   */\n      dup2\n        /* \"#utility.yul\":1924:1946   */\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1919:1922   */\n      dup3\n        /* \"#utility.yul\":1912:1947   */\n      mstore\n        /* \"#utility.yul\":1841:1953   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1959:2353   */\n    tag_27:\n        /* \"#utility.yul\":2111:2115   */\n      0x00\n        /* \"#utility.yul\":2149:2151   */\n      0x40\n        /* \"#utility.yul\":2138:2147   */\n      dup3\n        /* \"#utility.yul\":2134:2152   */\n      add\n        /* \"#utility.yul\":2126:2152   */\n      swap1\n      pop\n        /* \"#utility.yul\":2162:2233   */\n      tag_74\n        /* \"#utility.yul\":2230:2231   */\n      0x00\n        /* \"#utility.yul\":2219:2228   */\n      dup4\n        /* \"#utility.yul\":2215:2232   */\n      add\n        /* \"#utility.yul\":2206:2212   */\n      dup6\n        /* \"#utility.yul\":2162:2233   */\n      tag_51\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2243:2346   */\n      tag_75\n        /* \"#utility.yul\":2342:2344   */\n      0x20\n        /* \"#utility.yul\":2331:2340   */\n      dup4\n        /* \"#utility.yul\":2327:2345   */\n      add\n        /* \"#utility.yul\":2318:2324   */\n      dup5\n        /* \"#utility.yul\":2243:2346   */\n      tag_59\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1959:2353   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2359:2609   */\n    tag_13:\n        /* \"#utility.yul\":2466:2470   */\n      0x00\n        /* \"#utility.yul\":2504:2506   */\n      0x20\n        /* \"#utility.yul\":2493:2502   */\n      dup3\n        /* \"#utility.yul\":2489:2507   */\n      add\n        /* \"#utility.yul\":2481:2507   */\n      swap1\n      pop\n        /* \"#utility.yul\":2517:2602   */\n      tag_77\n        /* \"#utility.yul\":2599:2600   */\n      0x00\n        /* \"#utility.yul\":2588:2597   */\n      dup4\n        /* \"#utility.yul\":2584:2601   */\n      add\n        /* \"#utility.yul\":2575:2581   */\n      dup5\n        /* \"#utility.yul\":2517:2602   */\n      tag_55\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2359:2609   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2615:3034   */\n    tag_22:\n        /* \"#utility.yul\":2781:2785   */\n      0x00\n        /* \"#utility.yul\":2819:2821   */\n      0x20\n        /* \"#utility.yul\":2808:2817   */\n      dup3\n        /* \"#utility.yul\":2804:2822   */\n      add\n        /* \"#utility.yul\":2796:2822   */\n      swap1\n      pop\n        /* \"#utility.yul\":2868:2877   */\n      dup2\n        /* \"#utility.yul\":2862:2866   */\n      dup2\n        /* \"#utility.yul\":2858:2878   */\n      sub\n        /* \"#utility.yul\":2854:2855   */\n      0x00\n        /* \"#utility.yul\":2843:2852   */\n      dup4\n        /* \"#utility.yul\":2839:2856   */\n      add\n        /* \"#utility.yul\":2832:2879   */\n      mstore\n        /* \"#utility.yul\":2896:3027   */\n      tag_79\n        /* \"#utility.yul\":3022:3026   */\n      dup2\n        /* \"#utility.yul\":2896:3027   */\n      tag_63\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2888:3027   */\n      swap1\n      pop\n        /* \"#utility.yul\":2615:3034   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3040:3254   */\n    tag_9:\n        /* \"#utility.yul\":3129:3133   */\n      0x00\n        /* \"#utility.yul\":3167:3169   */\n      0x20\n        /* \"#utility.yul\":3156:3165   */\n      dup3\n        /* \"#utility.yul\":3152:3170   */\n      add\n        /* \"#utility.yul\":3144:3170   */\n      swap1\n      pop\n        /* \"#utility.yul\":3180:3247   */\n      tag_81\n        /* \"#utility.yul\":3244:3245   */\n      0x00\n        /* \"#utility.yul\":3233:3242   */\n      dup4\n        /* \"#utility.yul\":3229:3246   */\n      add\n        /* \"#utility.yul\":3220:3226   */\n      dup5\n        /* \"#utility.yul\":3180:3247   */\n      tag_69\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":3040:3254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3341:3510   */\n    tag_66:\n        /* \"#utility.yul\":3425:3436   */\n      0x00\n        /* \"#utility.yul\":3459:3465   */\n      dup3\n        /* \"#utility.yul\":3454:3457   */\n      dup3\n        /* \"#utility.yul\":3447:3466   */\n      mstore\n        /* \"#utility.yul\":3499:3503   */\n      0x20\n        /* \"#utility.yul\":3494:3497   */\n      dup3\n        /* \"#utility.yul\":3490:3504   */\n      add\n        /* \"#utility.yul\":3475:3504   */\n      swap1\n      pop\n        /* \"#utility.yul\":3341:3510   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3516:3612   */\n    tag_54:\n        /* \"#utility.yul\":3553:3560   */\n      0x00\n        /* \"#utility.yul\":3582:3606   */\n      tag_86\n        /* \"#utility.yul\":3600:3605   */\n      dup3\n        /* \"#utility.yul\":3582:3606   */\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3571:3606   */\n      swap1\n      pop\n        /* \"#utility.yul\":3516:3612   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3618:3708   */\n    tag_88:\n        /* \"#utility.yul\":3652:3659   */\n      0x00\n        /* \"#utility.yul\":3695:3700   */\n      dup2\n        /* \"#utility.yul\":3688:3701   */\n      iszero\n        /* \"#utility.yul\":3681:3702   */\n      iszero\n        /* \"#utility.yul\":3670:3702   */\n      swap1\n      pop\n        /* \"#utility.yul\":3618:3708   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3714:3840   */\n    tag_87:\n        /* \"#utility.yul\":3751:3758   */\n      0x00\n        /* \"#utility.yul\":3791:3833   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3784:3789   */\n      dup3\n        /* \"#utility.yul\":3780:3834   */\n      and\n        /* \"#utility.yul\":3769:3834   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3846:3923   */\n    tag_91:\n        /* \"#utility.yul\":3883:3890   */\n      0x00\n        /* \"#utility.yul\":3912:3917   */\n      dup2\n        /* \"#utility.yul\":3901:3917   */\n      swap1\n      pop\n        /* \"#utility.yul\":3846:3923   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3929:4015   */\n    tag_72:\n        /* \"#utility.yul\":3964:3971   */\n      0x00\n        /* \"#utility.yul\":4004:4008   */\n      0xff\n        /* \"#utility.yul\":3997:4002   */\n      dup3\n        /* \"#utility.yul\":3993:4009   */\n      and\n        /* \"#utility.yul\":3982:4009   */\n      swap1\n      pop\n        /* \"#utility.yul\":3929:4015   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4021:4161   */\n    tag_58:\n        /* \"#utility.yul\":4085:4094   */\n      0x00\n        /* \"#utility.yul\":4118:4155   */\n      tag_95\n        /* \"#utility.yul\":4149:4154   */\n      dup3\n        /* \"#utility.yul\":4118:4155   */\n      tag_96\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":4105:4155   */\n      swap1\n      pop\n        /* \"#utility.yul\":4021:4161   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4167:4311   */\n    tag_62:\n        /* \"#utility.yul\":4248:4257   */\n      0x00\n        /* \"#utility.yul\":4281:4305   */\n      tag_98\n        /* \"#utility.yul\":4299:4304   */\n      dup3\n        /* \"#utility.yul\":4281:4305   */\n      tag_91\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":4268:4305   */\n      swap1\n      pop\n        /* \"#utility.yul\":4167:4311   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4317:4443   */\n    tag_96:\n        /* \"#utility.yul\":4367:4376   */\n      0x00\n        /* \"#utility.yul\":4400:4437   */\n      tag_100\n        /* \"#utility.yul\":4431:4436   */\n      dup3\n        /* \"#utility.yul\":4400:4437   */\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":4387:4437   */\n      swap1\n      pop\n        /* \"#utility.yul\":4317:4443   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4449:4562   */\n    tag_101:\n        /* \"#utility.yul\":4499:4508   */\n      0x00\n        /* \"#utility.yul\":4532:4556   */\n      tag_103\n        /* \"#utility.yul\":4550:4555   */\n      dup3\n        /* \"#utility.yul\":4532:4556   */\n      tag_87\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":4519:4556   */\n      swap1\n      pop\n        /* \"#utility.yul\":4449:4562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4691:4808   */\n    tag_45:\n        /* \"#utility.yul\":4800:4801   */\n      0x00\n        /* \"#utility.yul\":4797:4798   */\n      dup1\n        /* \"#utility.yul\":4790:4802   */\n      revert\n        /* \"#utility.yul\":4814:5045   */\n    tag_68:\n        /* \"#utility.yul\":4954:4988   */\n      0x557365722068617320616c72656164792072657175657374206c696d69746564\n        /* \"#utility.yul\":4950:4951   */\n      0x00\n        /* \"#utility.yul\":4942:4948   */\n      dup3\n        /* \"#utility.yul\":4938:4952   */\n      add\n        /* \"#utility.yul\":4931:4989   */\n      mstore\n        /* \"#utility.yul\":5023:5037   */\n      0x205050545420546f6b656e210000000000000000000000000000000000000000\n        /* \"#utility.yul\":5018:5020   */\n      0x20\n        /* \"#utility.yul\":5010:5016   */\n      dup3\n        /* \"#utility.yul\":5006:5021   */\n      add\n        /* \"#utility.yul\":4999:5038   */\n      mstore\n        /* \"#utility.yul\":4814:5045   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5051:5173   */\n    tag_37:\n        /* \"#utility.yul\":5124:5148   */\n      tag_109\n        /* \"#utility.yul\":5142:5147   */\n      dup2\n        /* \"#utility.yul\":5124:5148   */\n      tag_54\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":5117:5122   */\n      dup2\n        /* \"#utility.yul\":5114:5149   */\n      eq\n        /* \"#utility.yul\":5104:5167   */\n      tag_110\n      jumpi\n        /* \"#utility.yul\":5163:5164   */\n      0x00\n        /* \"#utility.yul\":5160:5161   */\n      dup1\n        /* \"#utility.yul\":5153:5165   */\n      revert\n        /* \"#utility.yul\":5104:5167   */\n    tag_110:\n        /* \"#utility.yul\":5051:5173   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5179:5295   */\n    tag_41:\n        /* \"#utility.yul\":5249:5270   */\n      tag_112\n        /* \"#utility.yul\":5264:5269   */\n      dup2\n        /* \"#utility.yul\":5249:5270   */\n      tag_88\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":5242:5247   */\n      dup2\n        /* \"#utility.yul\":5239:5271   */\n      eq\n        /* \"#utility.yul\":5229:5289   */\n      tag_113\n      jumpi\n        /* \"#utility.yul\":5285:5286   */\n      0x00\n        /* \"#utility.yul\":5282:5283   */\n      dup1\n        /* \"#utility.yul\":5275:5287   */\n      revert\n        /* \"#utility.yul\":5229:5289   */\n    tag_113:\n        /* \"#utility.yul\":5179:5295   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200bdd440e09de049c131bb71e9402b3db9c1d209180c8862be9d0ce0c0d116e7264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 236,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:2",
														"type": ""
													}
												],
												"src": "7:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:2"
															},
															"nodeType": "YulIf",
															"src": "243:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:2",
														"type": ""
													}
												],
												"src": "156:351:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:2",
														"type": ""
													}
												],
												"src": "513:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "678:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:2",
														"type": ""
													}
												],
												"src": "594:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "751:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "751:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "723:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "733:7:2",
														"type": ""
													}
												],
												"src": "696:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "828:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1057:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "951:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1140:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1165:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1147:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1137:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:43:2"
															},
															"nodeType": "YulIf",
															"src": "1127:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1110:5:2",
														"type": ""
													}
												],
												"src": "1074:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516106d23803806106d28339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600081519050610087816100f1565b92915050565b6000602082840312156100a3576100a26100ec565b5b60006100b184828501610078565b91505092915050565b60006100c5826100cc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fa816100ba565b811461010557600080fd5b50565b6105bb806101176000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806344e83453146100465780637517eae914610064578063a87430ba14610082575b600080fd5b61004e6100b2565b60405161005b919061043a565b60405180910390f35b61006c6102af565b60405161007991906103ff565b60405180910390f35b61009c6004803603810190610097919061031d565b6102d3565b6040516100a9919061043a565b60405180910390f35b60003360018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff161415610147576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013e9061041a565b60405180910390fd5b600260009054906101000a900460ff161561016157600080fd5b6001600260006101000a81548160ff02191690831515021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336969e10de76676d08000006040518363ffffffff1660e01b81526004016101e19291906103d6565b602060405180830381600087803b1580156101fb57600080fd5b505af115801561020f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610233919061034a565b5060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff160217905550600191506000600260006101000a81548160ff0219169083151502179055505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915054906101000a900460ff1681565b60008135905061030281610557565b92915050565b6000815190506103178161056e565b92915050565b60006020828403121561033357610332610503565b5b6000610341848285016102f3565b91505092915050565b6000602082840312156103605761035f610503565b5b600061036e84828501610308565b91505092915050565b61038081610466565b82525050565b61038f816104bb565b82525050565b61039e816104cd565b82525050565b60006103b1602c83610455565b91506103bc82610508565b604082019050919050565b6103d0816104ae565b82525050565b60006040820190506103eb6000830185610377565b6103f86020830184610395565b9392505050565b60006020820190506104146000830184610386565b92915050565b60006020820190508181036000830152610433816103a4565b9050919050565b600060208201905061044f60008301846103c7565b92915050565b600082825260208201905092915050565b600061047182610484565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006104c6826104df565b9050919050565b60006104d8826104a4565b9050919050565b60006104ea826104f1565b9050919050565b60006104fc82610484565b9050919050565b600080fd5b7f557365722068617320616c72656164792072657175657374206c696d6974656460008201527f205050545420546f6b656e210000000000000000000000000000000000000000602082015250565b61056081610466565b811461056b57600080fd5b50565b61057781610478565b811461058257600080fd5b5056fea26469706673582212200bdd440e09de049c131bb71e9402b3db9c1d209180c8862be9d0ce0c0d116e7264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x6D2 CODESIZE SUB DUP1 PUSH2 0x6D2 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x8D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x108 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x87 DUP2 PUSH2 0xF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3 JUMPI PUSH2 0xA2 PUSH2 0xEC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB1 DUP5 DUP3 DUP6 ADD PUSH2 0x78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5 DUP3 PUSH2 0xCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA DUP2 PUSH2 0xBA JUMP JUMPDEST DUP2 EQ PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5BB DUP1 PUSH2 0x117 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x44E83453 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x7517EAE9 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x31D JUMP JUMPDEST PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ ISZERO PUSH2 0x147 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E SWAP1 PUSH2 0x41A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH10 0x69E10DE76676D0800000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E1 SWAP3 SWAP2 SWAP1 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x20F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x34A JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP2 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x302 DUP2 PUSH2 0x557 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x317 DUP2 PUSH2 0x56E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x333 JUMPI PUSH2 0x332 PUSH2 0x503 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x341 DUP5 DUP3 DUP6 ADD PUSH2 0x2F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x360 JUMPI PUSH2 0x35F PUSH2 0x503 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36E DUP5 DUP3 DUP6 ADD PUSH2 0x308 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x380 DUP2 PUSH2 0x466 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x38F DUP2 PUSH2 0x4BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x39E DUP2 PUSH2 0x4CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 PUSH1 0x2C DUP4 PUSH2 0x455 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BC DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D0 DUP2 PUSH2 0x4AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3EB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x377 JUMP JUMPDEST PUSH2 0x3F8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x395 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x414 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x386 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x433 DUP2 PUSH2 0x3A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x44F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x471 DUP3 PUSH2 0x484 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C6 DUP3 PUSH2 0x4DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D8 DUP3 PUSH2 0x4A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EA DUP3 PUSH2 0x4F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FC DUP3 PUSH2 0x484 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x557365722068617320616C72656164792072657175657374206C696D69746564 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x205050545420546F6B656E210000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x560 DUP2 PUSH2 0x466 JUMP JUMPDEST DUP2 EQ PUSH2 0x56B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x577 DUP2 PUSH2 0x478 JUMP JUMPDEST DUP2 EQ PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xDD DIFFICULTY 0xE MULMOD 0xDE DIV SWAP13 SGT SHL 0xB7 0x1E SWAP5 MUL 0xB3 0xDB SWAP13 SAR KECCAK256 SWAP2 DUP1 0xC8 DUP7 0x2B 0xE9 0xD0 0xCE 0xC 0xD GT PUSH15 0x7264736F6C63430008070033000000 ",
							"sourceMap": "167:687:0:-:0;;;297:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;353:6;334:9;;:26;;;;;;;;;;;;;;;;;;297:70;167:687;;7:143:2;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;167:687:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@PPTTToken_5": {
									"entryPoint": 687,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@requestPPTT_84": {
									"entryPoint": 178,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@users_9": {
									"entryPoint": 723,
									"id": 9,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$163_to_t_address_fromStack": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_500000000000000000000000_by_1_to_t_uint256_fromStack": {
									"entryPoint": 917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_e69aec3b07c9f4436b9bee634efc8f1f0cffa7f182b71296a81c4d2d46a5619b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_rational_500000000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 982,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$163__to_t_address__fromStack_reversed": {
									"entryPoint": 1023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e69aec3b07c9f4436b9bee634efc8f1f0cffa7f182b71296a81c4d2d46a5619b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 1082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$163_to_t_address": {
									"entryPoint": 1211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_500000000000000000000000_by_1_to_t_uint256": {
									"entryPoint": 1229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1283,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_e69aec3b07c9f4436b9bee634efc8f1f0cffa7f182b71296a81c4d2d46a5619b": {
									"entryPoint": 1288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5298:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:2",
														"type": ""
													}
												],
												"src": "152:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "361:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "407:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "409:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "409:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "409:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "382:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "391:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "378:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "378:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "403:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "374:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "374:32:2"
															},
															"nodeType": "YulIf",
															"src": "371:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "500:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "515:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "529:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "519:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "544:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "579:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "590:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "575:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "575:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "599:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "554:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "554:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "544:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "331:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "342:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "354:6:2",
														"type": ""
													}
												],
												"src": "295:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "704:271:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "750:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "752:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "752:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "752:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "725:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "734:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "721:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "721:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "746:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "717:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:32:2"
															},
															"nodeType": "YulIf",
															"src": "714:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "843:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "858:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "872:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "862:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "887:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "930:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "941:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "926:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "926:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "950:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "897:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "897:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "887:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "674:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "685:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "697:6:2",
														"type": ""
													}
												],
												"src": "630:345:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1063:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1086:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1068:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1068:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1056:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1056:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1056:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1034:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1041:3:2",
														"type": ""
													}
												],
												"src": "981:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1184:80:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1201:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1251:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$163_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1206:44:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1206:51:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:64:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:64:2"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$163_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1172:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1179:3:2",
														"type": ""
													}
												],
												"src": "1105:159:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1366:97:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1383:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1450:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_500000000000000000000000_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1388:61:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1388:68:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1376:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1376:81:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1376:81:2"
														}
													]
												},
												"name": "abi_encode_t_rational_500000000000000000000000_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1354:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1361:3:2",
														"type": ""
													}
												],
												"src": "1270:193:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1615:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1625:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1691:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1696:2:2",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1632:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1632:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1625:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1797:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e69aec3b07c9f4436b9bee634efc8f1f0cffa7f182b71296a81c4d2d46a5619b",
																	"nodeType": "YulIdentifier",
																	"src": "1708:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1708:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1708:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1810:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1821:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1826:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1817:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1817:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1810:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e69aec3b07c9f4436b9bee634efc8f1f0cffa7f182b71296a81c4d2d46a5619b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1603:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1611:3:2",
														"type": ""
													}
												],
												"src": "1469:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1902:51:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1919:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1940:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "1924:15:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1924:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1912:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1912:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1912:35:2"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1890:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1897:3:2",
														"type": ""
													}
												],
												"src": "1841:112:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2116:237:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2126:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2138:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2149:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2134:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2134:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2126:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2206:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2219:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2230:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2215:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2215:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2162:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2162:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2162:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2318:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2331:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2342:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2327:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2327:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_500000000000000000000000_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2243:74:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2243:103:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2243:103:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_500000000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2080:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2092:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2100:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2111:4:2",
														"type": ""
													}
												],
												"src": "1959:394:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2471:138:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2481:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2493:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2504:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2489:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2489:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2481:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2575:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2588:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2599:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2584:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2584:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$163_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2517:57:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2517:85:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2517:85:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$163__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2443:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2455:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2466:4:2",
														"type": ""
													}
												],
												"src": "2359:250:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2786:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2796:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2808:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2819:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2796:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2843:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2854:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2839:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2839:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2862:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2868:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2858:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2858:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2832:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2832:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2832:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2888:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3022:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e69aec3b07c9f4436b9bee634efc8f1f0cffa7f182b71296a81c4d2d46a5619b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2896:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2896:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2888:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e69aec3b07c9f4436b9bee634efc8f1f0cffa7f182b71296a81c4d2d46a5619b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2766:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2781:4:2",
														"type": ""
													}
												],
												"src": "2615:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3134:120:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3144:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3156:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3167:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3152:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3152:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3144:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3220:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3233:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3244:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3229:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3229:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3180:39:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3180:67:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3180:67:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3106:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3118:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3129:4:2",
														"type": ""
													}
												],
												"src": "3040:214:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3300:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3310:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3326:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3320:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3320:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3310:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3293:6:2",
														"type": ""
													}
												],
												"src": "3260:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3437:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3454:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3459:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3447:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3447:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3447:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3475:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3494:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3499:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3490:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3490:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3475:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3409:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3414:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3425:11:2",
														"type": ""
													}
												],
												"src": "3341:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3561:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3571:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3600:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3582:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3582:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3571:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3543:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3553:7:2",
														"type": ""
													}
												],
												"src": "3516:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3660:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3670:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3695:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3688:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3688:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3681:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3681:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3670:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3642:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3652:7:2",
														"type": ""
													}
												],
												"src": "3618:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3759:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3769:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3784:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3791:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3780:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3780:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3769:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3741:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3751:7:2",
														"type": ""
													}
												],
												"src": "3714:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3891:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3901:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3912:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3901:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3873:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3883:7:2",
														"type": ""
													}
												],
												"src": "3846:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3972:43:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3982:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3997:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4004:4:2",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3993:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3993:16:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3982:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3954:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3964:7:2",
														"type": ""
													}
												],
												"src": "3929:86:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4095:66:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4105:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4149:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4118:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4105:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$163_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4075:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4085:9:2",
														"type": ""
													}
												],
												"src": "4021:140:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4258:53:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4268:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4299:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4281:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4281:24:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4268:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_500000000000000000000000_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4238:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4248:9:2",
														"type": ""
													}
												],
												"src": "4167:144:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4377:66:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4387:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4431:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4400:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4400:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4387:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4357:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4367:9:2",
														"type": ""
													}
												],
												"src": "4317:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4509:53:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4519:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4532:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4532:24:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4519:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4489:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4499:9:2",
														"type": ""
													}
												],
												"src": "4449:113:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4657:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4674:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4677:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4667:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4667:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4667:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4568:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4780:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4797:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4800:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4790:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4790:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4790:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4691:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4920:125:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4942:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4950:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4938:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4938:14:2"
																	},
																	{
																		"hexValue": "557365722068617320616c72656164792072657175657374206c696d69746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4954:34:2",
																		"type": "",
																		"value": "User has already request limited"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4931:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4931:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4931:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5010:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5018:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5006:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5006:15:2"
																	},
																	{
																		"hexValue": "205050545420546f6b656e21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5023:14:2",
																		"type": "",
																		"value": " PPTT Token!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4999:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4999:39:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4999:39:2"
														}
													]
												},
												"name": "store_literal_in_memory_e69aec3b07c9f4436b9bee634efc8f1f0cffa7f182b71296a81c4d2d46a5619b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4912:6:2",
														"type": ""
													}
												],
												"src": "4814:231:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5094:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5151:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5160:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5163:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5153:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5153:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5153:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5117:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5142:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5124:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5124:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5114:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5114:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5107:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5107:43:2"
															},
															"nodeType": "YulIf",
															"src": "5104:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5087:5:2",
														"type": ""
													}
												],
												"src": "5051:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5219:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5273:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5282:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5285:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5275:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5275:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5275:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5242:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5264:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "5249:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5249:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5239:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5239:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5232:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5232:40:2"
															},
															"nodeType": "YulIf",
															"src": "5229:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5212:5:2",
														"type": ""
													}
												],
												"src": "5179:116:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$163_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$163_to_t_address(value))\n    }\n\n    function abi_encode_t_rational_500000000000000000000000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_500000000000000000000000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_t_stringliteral_e69aec3b07c9f4436b9bee634efc8f1f0cffa7f182b71296a81c4d2d46a5619b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_e69aec3b07c9f4436b9bee634efc8f1f0cffa7f182b71296a81c4d2d46a5619b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_500000000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_500000000000000000000000_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$163__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$163_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e69aec3b07c9f4436b9bee634efc8f1f0cffa7f182b71296a81c4d2d46a5619b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e69aec3b07c9f4436b9bee634efc8f1f0cffa7f182b71296a81c4d2d46a5619b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function convert_t_contract$_IERC20_$163_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_rational_500000000000000000000000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_e69aec3b07c9f4436b9bee634efc8f1f0cffa7f182b71296a81c4d2d46a5619b(memPtr) {\n\n        mstore(add(memPtr, 0), \"User has already request limited\")\n\n        mstore(add(memPtr, 32), \" PPTT Token!\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806344e83453146100465780637517eae914610064578063a87430ba14610082575b600080fd5b61004e6100b2565b60405161005b919061043a565b60405180910390f35b61006c6102af565b60405161007991906103ff565b60405180910390f35b61009c6004803603810190610097919061031d565b6102d3565b6040516100a9919061043a565b60405180910390f35b60003360018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff161415610147576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013e9061041a565b60405180910390fd5b600260009054906101000a900460ff161561016157600080fd5b6001600260006101000a81548160ff02191690831515021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336969e10de76676d08000006040518363ffffffff1660e01b81526004016101e19291906103d6565b602060405180830381600087803b1580156101fb57600080fd5b505af115801561020f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610233919061034a565b5060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff160217905550600191506000600260006101000a81548160ff0219169083151502179055505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915054906101000a900460ff1681565b60008135905061030281610557565b92915050565b6000815190506103178161056e565b92915050565b60006020828403121561033357610332610503565b5b6000610341848285016102f3565b91505092915050565b6000602082840312156103605761035f610503565b5b600061036e84828501610308565b91505092915050565b61038081610466565b82525050565b61038f816104bb565b82525050565b61039e816104cd565b82525050565b60006103b1602c83610455565b91506103bc82610508565b604082019050919050565b6103d0816104ae565b82525050565b60006040820190506103eb6000830185610377565b6103f86020830184610395565b9392505050565b60006020820190506104146000830184610386565b92915050565b60006020820190508181036000830152610433816103a4565b9050919050565b600060208201905061044f60008301846103c7565b92915050565b600082825260208201905092915050565b600061047182610484565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006104c6826104df565b9050919050565b60006104d8826104a4565b9050919050565b60006104ea826104f1565b9050919050565b60006104fc82610484565b9050919050565b600080fd5b7f557365722068617320616c72656164792072657175657374206c696d6974656460008201527f205050545420546f6b656e210000000000000000000000000000000000000000602082015250565b61056081610466565b811461056b57600080fd5b50565b61057781610478565b811461058257600080fd5b5056fea26469706673582212200bdd440e09de049c131bb71e9402b3db9c1d209180c8862be9d0ce0c0d116e7264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x44E83453 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x7517EAE9 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x31D JUMP JUMPDEST PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ ISZERO PUSH2 0x147 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E SWAP1 PUSH2 0x41A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH10 0x69E10DE76676D0800000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E1 SWAP3 SWAP2 SWAP1 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x20F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x34A JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP2 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x302 DUP2 PUSH2 0x557 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x317 DUP2 PUSH2 0x56E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x333 JUMPI PUSH2 0x332 PUSH2 0x503 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x341 DUP5 DUP3 DUP6 ADD PUSH2 0x2F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x360 JUMPI PUSH2 0x35F PUSH2 0x503 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36E DUP5 DUP3 DUP6 ADD PUSH2 0x308 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x380 DUP2 PUSH2 0x466 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x38F DUP2 PUSH2 0x4BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x39E DUP2 PUSH2 0x4CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 PUSH1 0x2C DUP4 PUSH2 0x455 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BC DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D0 DUP2 PUSH2 0x4AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3EB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x377 JUMP JUMPDEST PUSH2 0x3F8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x395 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x414 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x386 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x433 DUP2 PUSH2 0x3A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x44F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x471 DUP3 PUSH2 0x484 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C6 DUP3 PUSH2 0x4DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D8 DUP3 PUSH2 0x4A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EA DUP3 PUSH2 0x4F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FC DUP3 PUSH2 0x484 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x557365722068617320616C72656164792072657175657374206C696D69746564 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x205050545420546F6B656E210000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x560 DUP2 PUSH2 0x466 JUMP JUMPDEST DUP2 EQ PUSH2 0x56B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x577 DUP2 PUSH2 0x478 JUMP JUMPDEST DUP2 EQ PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xDD DIFFICULTY 0xE MULMOD 0xDE DIV SWAP13 SGT SHL 0xB7 0x1E SWAP5 MUL 0xB3 0xDB SWAP13 SAR KECCAK256 SWAP2 DUP1 0xC8 DUP7 0x2B 0xE9 0xD0 0xCE 0xC 0xD GT PUSH15 0x7264736F6C63430008070033000000 ",
							"sourceMap": "167:687:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;643:209;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;197:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;226:38;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;643:209;724:5;680:10;569:1;553:5;:12;559:5;553:12;;;;;;;;;;;;;;;;;;;;;;;;;:17;;;;545:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;419:6:::1;;;;;;;;;;;418:7;410:16;;;::::0;::::1;;445:4;436:6;;:13;;;;;;;;;;;;;;;;;;740:9:::2;::::0;::::2;;;;;;;;:18;;;759:10;771:24;740:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;826:1;806:5:::0;:17:::2;812:10;806:17;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;844:1;837:8;;479:5:::1;470:6;;:14;;;;;;;;;;;;;;;;;;643:209:::0;;:::o;197:23::-;;;;;;;;;;;;:::o;226:38::-;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:329::-;354:6;403:2;391:9;382:7;378:23;374:32;371:119;;;409:79;;:::i;:::-;371:119;529:1;554:53;599:7;590:6;579:9;575:22;554:53;:::i;:::-;544:63;;500:117;295:329;;;;:::o;630:345::-;697:6;746:2;734:9;725:7;721:23;717:32;714:119;;;752:79;;:::i;:::-;714:119;872:1;897:61;950:7;941:6;930:9;926:22;897:61;:::i;:::-;887:71;;843:125;630:345;;;;:::o;981:118::-;1068:24;1086:5;1068:24;:::i;:::-;1063:3;1056:37;981:118;;:::o;1105:159::-;1206:51;1251:5;1206:51;:::i;:::-;1201:3;1194:64;1105:159;;:::o;1270:193::-;1388:68;1450:5;1388:68;:::i;:::-;1383:3;1376:81;1270:193;;:::o;1469:366::-;1611:3;1632:67;1696:2;1691:3;1632:67;:::i;:::-;1625:74;;1708:93;1797:3;1708:93;:::i;:::-;1826:2;1821:3;1817:12;1810:19;;1469:366;;;:::o;1841:112::-;1924:22;1940:5;1924:22;:::i;:::-;1919:3;1912:35;1841:112;;:::o;1959:394::-;2111:4;2149:2;2138:9;2134:18;2126:26;;2162:71;2230:1;2219:9;2215:17;2206:6;2162:71;:::i;:::-;2243:103;2342:2;2331:9;2327:18;2318:6;2243:103;:::i;:::-;1959:394;;;;;:::o;2359:250::-;2466:4;2504:2;2493:9;2489:18;2481:26;;2517:85;2599:1;2588:9;2584:17;2575:6;2517:85;:::i;:::-;2359:250;;;;:::o;2615:419::-;2781:4;2819:2;2808:9;2804:18;2796:26;;2868:9;2862:4;2858:20;2854:1;2843:9;2839:17;2832:47;2896:131;3022:4;2896:131;:::i;:::-;2888:139;;2615:419;;;:::o;3040:214::-;3129:4;3167:2;3156:9;3152:18;3144:26;;3180:67;3244:1;3233:9;3229:17;3220:6;3180:67;:::i;:::-;3040:214;;;;:::o;3341:169::-;3425:11;3459:6;3454:3;3447:19;3499:4;3494:3;3490:14;3475:29;;3341:169;;;;:::o;3516:96::-;3553:7;3582:24;3600:5;3582:24;:::i;:::-;3571:35;;3516:96;;;:::o;3618:90::-;3652:7;3695:5;3688:13;3681:21;3670:32;;3618:90;;;:::o;3714:126::-;3751:7;3791:42;3784:5;3780:54;3769:65;;3714:126;;;:::o;3846:77::-;3883:7;3912:5;3901:16;;3846:77;;;:::o;3929:86::-;3964:7;4004:4;3997:5;3993:16;3982:27;;3929:86;;;:::o;4021:140::-;4085:9;4118:37;4149:5;4118:37;:::i;:::-;4105:50;;4021:140;;;:::o;4167:144::-;4248:9;4281:24;4299:5;4281:24;:::i;:::-;4268:37;;4167:144;;;:::o;4317:126::-;4367:9;4400:37;4431:5;4400:37;:::i;:::-;4387:50;;4317:126;;;:::o;4449:113::-;4499:9;4532:24;4550:5;4532:24;:::i;:::-;4519:37;;4449:113;;;:::o;4691:117::-;4800:1;4797;4790:12;4814:231;4954:34;4950:1;4942:6;4938:14;4931:58;5023:14;5018:2;5010:6;5006:15;4999:39;4814:231;:::o;5051:122::-;5124:24;5142:5;5124:24;:::i;:::-;5117:5;5114:35;5104:63;;5163:1;5160;5153:12;5104:63;5051:122;:::o;5179:116::-;5249:21;5264:5;5249:21;:::i;:::-;5242:5;5239:32;5229:60;;5285:1;5282;5275:12;5229:60;5179:116;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "293400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"PPTTToken()": "2597",
								"requestPPTT()": "infinite",
								"users(address)": "2867"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 167,
									"end": 854,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 167,
									"end": 854,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 167,
									"end": 854,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 367,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 367,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 367,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 297,
									"end": 367,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 297,
									"end": 367,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 297,
									"end": 367,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 297,
									"end": 367,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 297,
									"end": 367,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 297,
									"end": 367,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 353,
									"end": 359,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 334,
									"end": 343,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 343,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 334,
									"end": 360,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 334,
									"end": 360,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 334,
									"end": 360,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 334,
									"end": 360,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 334,
									"end": 360,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 334,
									"end": 360,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 334,
									"end": 360,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 334,
									"end": 360,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 334,
									"end": 360,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 334,
									"end": 360,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 334,
									"end": 360,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 334,
									"end": 360,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 334,
									"end": 360,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 334,
									"end": 360,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 334,
									"end": 360,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 334,
									"end": 360,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 334,
									"end": 360,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 334,
									"end": 360,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 297,
									"end": 367,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 167,
									"end": 854,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 167,
									"end": 854,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 678,
									"end": 683,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 649,
									"end": 684,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 649,
									"end": 684,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 733,
									"end": 740,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 815,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 762,
									"end": 816,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 751,
									"end": 816,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 751,
									"end": 816,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1165,
									"end": 1170,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1140,
									"end": 1145,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1137,
									"end": 1172,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1186,
									"end": 1187,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 167,
									"end": 854,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 167,
									"end": 854,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 167,
									"end": 854,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 854,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 167,
									"end": 854,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 854,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 854,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 167,
									"end": 854,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 854,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200bdd440e09de049c131bb71e9402b3db9c1d209180c8862be9d0ce0c0d116e7264736f6c63430008070033",
									".code": [
										{
											"begin": 167,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 167,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 167,
											"end": 854,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 167,
											"end": 854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 854,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 167,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 167,
											"end": 854,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 854,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 167,
											"end": 854,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 167,
											"end": 854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 167,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 854,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 167,
											"end": 854,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 167,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 854,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 854,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 167,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 167,
											"end": 854,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 167,
											"end": 854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "44E83453"
										},
										{
											"begin": 167,
											"end": 854,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 167,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 167,
											"end": 854,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "7517EAE9"
										},
										{
											"begin": 167,
											"end": 854,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 167,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 854,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "A87430BA"
										},
										{
											"begin": 167,
											"end": 854,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 167,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 167,
											"end": 854,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 854,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 854,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 643,
											"end": 852,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 643,
											"end": 852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 643,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 643,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 643,
											"end": 852,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 643,
											"end": 852,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 643,
											"end": 852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 643,
											"end": 852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 643,
											"end": 852,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 643,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 643,
											"end": 852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 643,
											"end": 852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 643,
											"end": 852,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 643,
											"end": 852,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 643,
											"end": 852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 643,
											"end": 852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 643,
											"end": 852,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 643,
											"end": 852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 643,
											"end": 852,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 643,
											"end": 852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 852,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 197,
											"end": 220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 197,
											"end": 220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 197,
											"end": 220,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 197,
											"end": 220,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 197,
											"end": 220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 197,
											"end": 220,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 197,
											"end": 220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 197,
											"end": 220,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 197,
											"end": 220,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 197,
											"end": 220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 197,
											"end": 220,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 643,
											"end": 852,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 643,
											"end": 852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 724,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 690,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 569,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 553,
											"end": 558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 553,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 564,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 553,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 553,
											"end": 565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 553,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 553,
											"end": 565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 553,
											"end": 565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 553,
											"end": 565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 553,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 553,
											"end": 565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 553,
											"end": 565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 553,
											"end": 565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 553,
											"end": 565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 553,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 553,
											"end": 565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 553,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 565,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 553,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 553,
											"end": 565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 553,
											"end": 565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 553,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 553,
											"end": 565,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 553,
											"end": 565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 553,
											"end": 565,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 553,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 553,
											"end": 565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 553,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 553,
											"end": 570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 553,
											"end": 570,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 553,
											"end": 570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 545,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 545,
											"end": 619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 545,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 619,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 545,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 545,
											"end": 619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 545,
											"end": 619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 545,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 545,
											"end": 619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 545,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 545,
											"end": 619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 545,
											"end": 619,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 545,
											"end": 619,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 545,
											"end": 619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 545,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 619,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 545,
											"end": 619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 545,
											"end": 619,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 545,
											"end": 619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 619,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 545,
											"end": 619,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 545,
											"end": 619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 419,
											"end": 425,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 419,
											"end": 425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 419,
											"end": 425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 419,
											"end": 425,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 419,
											"end": 425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 419,
											"end": 425,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 419,
											"end": 425,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 419,
											"end": 425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 419,
											"end": 425,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 419,
											"end": 425,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 419,
											"end": 425,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 418,
											"end": 425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 410,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 410,
											"end": 426,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 410,
											"end": 426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 410,
											"end": 426,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 410,
											"end": 426,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 410,
											"end": 426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 445,
											"end": 449,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 436,
											"end": 442,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 436,
											"end": 442,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 449,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 436,
											"end": 449,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 449,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 436,
											"end": 449,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 436,
											"end": 449,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 436,
											"end": 449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 436,
											"end": 449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 449,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 436,
											"end": 449,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 436,
											"end": 449,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 436,
											"end": 449,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 436,
											"end": 449,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 436,
											"end": 449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 449,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 436,
											"end": 449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 740,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 740,
											"end": 749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 740,
											"end": 749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 740,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 740,
											"end": 749,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 740,
											"end": 749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 740,
											"end": 749,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 740,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 740,
											"end": 749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 740,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 740,
											"end": 758,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 740,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 759,
											"end": 769,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 771,
											"end": 795,
											"name": "PUSH",
											"source": 0,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 740,
											"end": 796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 740,
											"end": 796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 826,
											"end": 827,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 806,
											"end": 811,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 822,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 806,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 806,
											"end": 823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 806,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 806,
											"end": 823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 806,
											"end": 823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 806,
											"end": 823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 806,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 806,
											"end": 823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 806,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 806,
											"end": 823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 806,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 806,
											"end": 823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 806,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 806,
											"end": 823,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 806,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 806,
											"end": 827,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 806,
											"end": 827,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 806,
											"end": 827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 806,
											"end": 827,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 806,
											"end": 827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 806,
											"end": 827,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 806,
											"end": 827,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 806,
											"end": 827,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 806,
											"end": 827,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 806,
											"end": 827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 806,
											"end": 827,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 806,
											"end": 827,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 806,
											"end": 827,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 806,
											"end": 827,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 806,
											"end": 827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 827,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 806,
											"end": 827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 844,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 837,
											"end": 845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 837,
											"end": 845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 479,
											"end": 484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 470,
											"end": 476,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 470,
											"end": 476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 470,
											"end": 484,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 470,
											"end": 484,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 470,
											"end": 484,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 643,
											"end": 852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 643,
											"end": 852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 852,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 197,
											"end": 220,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 197,
											"end": 220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 197,
											"end": 220,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 197,
											"end": 220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 226,
											"end": 264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 226,
											"end": 264,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 624,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 295,
											"end": 624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 354,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 405,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 391,
											"end": 400,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 382,
											"end": 389,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 378,
											"end": 401,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 374,
											"end": 406,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 371,
											"end": 490,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 371,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 371,
											"end": 490,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 409,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 409,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 409,
											"end": 488,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 409,
											"end": 488,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 409,
											"end": 488,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 490,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 371,
											"end": 490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 554,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 599,
											"end": 606,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 590,
											"end": 596,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 579,
											"end": 588,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 575,
											"end": 597,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 554,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 554,
											"end": 607,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 554,
											"end": 607,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 554,
											"end": 607,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 544,
											"end": 607,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 544,
											"end": 607,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 500,
											"end": 617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 624,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 295,
											"end": 624,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 295,
											"end": 624,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 624,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 624,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 630,
											"end": 975,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 630,
											"end": 975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 697,
											"end": 703,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 746,
											"end": 748,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 734,
											"end": 743,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 725,
											"end": 732,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 721,
											"end": 744,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 717,
											"end": 749,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 714,
											"end": 833,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 714,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 714,
											"end": 833,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 752,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 752,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 752,
											"end": 831,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 752,
											"end": 831,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 752,
											"end": 831,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 714,
											"end": 833,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 714,
											"end": 833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 872,
											"end": 873,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 950,
											"end": 957,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 941,
											"end": 947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 930,
											"end": 939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 926,
											"end": 948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 897,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 897,
											"end": 958,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 897,
											"end": 958,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 897,
											"end": 958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 887,
											"end": 958,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 887,
											"end": 958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 843,
											"end": 968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 630,
											"end": 975,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 630,
											"end": 975,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 630,
											"end": 975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 630,
											"end": 975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 630,
											"end": 975,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1066,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1105,
											"end": 1264,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1105,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1206,
											"end": 1257,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1206,
											"end": 1257,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1206,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1204,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1194,
											"end": 1258,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1264,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1264,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1264,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1270,
											"end": 1463,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1270,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1450,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1383,
											"end": 1386,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1376,
											"end": 1457,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1463,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1469,
											"end": 1835,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1469,
											"end": 1835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1614,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 2,
											"value": "2C"
										},
										{
											"begin": 1691,
											"end": 1694,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1632,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1632,
											"end": 1699,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1632,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1632,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1797,
											"end": 1800,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1708,
											"end": 1801,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1708,
											"end": 1801,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1708,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1828,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1821,
											"end": 1824,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1817,
											"end": 1829,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1810,
											"end": 1829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1810,
											"end": 1829,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1835,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1841,
											"end": 1953,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1841,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1940,
											"end": 1945,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 1922,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 1947,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 1953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 1953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 1953,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1959,
											"end": 2353,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1959,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2115,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2149,
											"end": 2151,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2152,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2152,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2230,
											"end": 2231,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2228,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2232,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2206,
											"end": 2212,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2162,
											"end": 2233,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2162,
											"end": 2233,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2162,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2243,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2342,
											"end": 2344,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2331,
											"end": 2340,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2345,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2324,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2243,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2243,
											"end": 2346,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2243,
											"end": 2346,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2243,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 2353,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 2353,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 2353,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 2353,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 2353,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 2353,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2359,
											"end": 2609,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2359,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2470,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2506,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2493,
											"end": 2502,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2481,
											"end": 2507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2481,
											"end": 2507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2599,
											"end": 2600,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2597,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2584,
											"end": 2601,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2581,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2517,
											"end": 2602,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2517,
											"end": 2602,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2517,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2359,
											"end": 2609,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2359,
											"end": 2609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2359,
											"end": 2609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2359,
											"end": 2609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2359,
											"end": 2609,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2615,
											"end": 3034,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2615,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2785,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2821,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2808,
											"end": 2817,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2804,
											"end": 2822,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2868,
											"end": 2877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2862,
											"end": 2866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2858,
											"end": 2878,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2852,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2879,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2896,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3022,
											"end": 3026,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2896,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2896,
											"end": 3027,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2896,
											"end": 3027,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2896,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 3027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 3027,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 3034,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 3034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 3034,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 3034,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3040,
											"end": 3254,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3040,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3129,
											"end": 3133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3167,
											"end": 3169,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3156,
											"end": 3165,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3170,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3170,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3180,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3244,
											"end": 3245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3233,
											"end": 3242,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3229,
											"end": 3246,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3226,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3180,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3180,
											"end": 3247,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3180,
											"end": 3247,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3180,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3254,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3341,
											"end": 3510,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3341,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3459,
											"end": 3465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3454,
											"end": 3457,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3447,
											"end": 3466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3503,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3494,
											"end": 3497,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3504,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3341,
											"end": 3510,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3341,
											"end": 3510,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3341,
											"end": 3510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3341,
											"end": 3510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3341,
											"end": 3510,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3516,
											"end": 3612,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3516,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3553,
											"end": 3560,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3600,
											"end": 3605,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3582,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3582,
											"end": 3606,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3582,
											"end": 3606,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3582,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3516,
											"end": 3612,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3516,
											"end": 3612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3516,
											"end": 3612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3516,
											"end": 3612,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3618,
											"end": 3708,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3618,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3659,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3700,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3688,
											"end": 3701,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3670,
											"end": 3702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3670,
											"end": 3702,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3708,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3708,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3714,
											"end": 3840,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3714,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3751,
											"end": 3758,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3833,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3784,
											"end": 3789,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3780,
											"end": 3834,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3840,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3840,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3846,
											"end": 3923,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3846,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 3890,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3912,
											"end": 3917,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3901,
											"end": 3917,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3901,
											"end": 3917,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3923,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3923,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3923,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3929,
											"end": 4015,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3929,
											"end": 4015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3964,
											"end": 3971,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4004,
											"end": 4008,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3997,
											"end": 4002,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3982,
											"end": 4009,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3982,
											"end": 4009,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3929,
											"end": 4015,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3929,
											"end": 4015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3929,
											"end": 4015,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3929,
											"end": 4015,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4021,
											"end": 4161,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4021,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4085,
											"end": 4094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4118,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4149,
											"end": 4154,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4118,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4118,
											"end": 4155,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4118,
											"end": 4155,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4118,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4105,
											"end": 4155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4105,
											"end": 4155,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4021,
											"end": 4161,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4021,
											"end": 4161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4021,
											"end": 4161,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4021,
											"end": 4161,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4167,
											"end": 4311,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4167,
											"end": 4311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4248,
											"end": 4257,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4281,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4299,
											"end": 4304,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4281,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4281,
											"end": 4305,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4281,
											"end": 4305,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4281,
											"end": 4305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4268,
											"end": 4305,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4268,
											"end": 4305,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4311,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4311,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4317,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4317,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4431,
											"end": 4436,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4387,
											"end": 4437,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4387,
											"end": 4437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4443,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4449,
											"end": 4562,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4449,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4499,
											"end": 4508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4532,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4550,
											"end": 4555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4532,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4532,
											"end": 4556,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4532,
											"end": 4556,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4532,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4519,
											"end": 4556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4519,
											"end": 4556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4449,
											"end": 4562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4449,
											"end": 4562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4449,
											"end": 4562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4449,
											"end": 4562,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4691,
											"end": 4808,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4691,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4800,
											"end": 4801,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4797,
											"end": 4798,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4802,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5045,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4814,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4954,
											"end": 4988,
											"name": "PUSH",
											"source": 2,
											"value": "557365722068617320616C72656164792072657175657374206C696D69746564"
										},
										{
											"begin": 4950,
											"end": 4951,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4942,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 4952,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 4989,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5023,
											"end": 5037,
											"name": "PUSH",
											"source": 2,
											"value": "205050545420546F6B656E210000000000000000000000000000000000000000"
										},
										{
											"begin": 5018,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5010,
											"end": 5016,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5006,
											"end": 5021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4999,
											"end": 5038,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5045,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5045,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5051,
											"end": 5173,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5051,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5124,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 5142,
											"end": 5147,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5124,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5124,
											"end": 5148,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5124,
											"end": 5148,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 5124,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5117,
											"end": 5122,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5149,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5104,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5104,
											"end": 5167,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5163,
											"end": 5164,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5160,
											"end": 5161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5165,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5104,
											"end": 5167,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5104,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5051,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5051,
											"end": 5173,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5179,
											"end": 5295,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5179,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5264,
											"end": 5269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 5249,
											"end": 5270,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5249,
											"end": 5270,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5249,
											"end": 5270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5242,
											"end": 5247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5239,
											"end": 5271,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 5229,
											"end": 5289,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5285,
											"end": 5286,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5287,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5289,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 5229,
											"end": 5289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5295,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"PPTTToken()": "7517eae9",
							"requestPPTT()": "44e83453",
							"users(address)": "a87430ba"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"PPTTToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestPPTT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Faucet.sol\":\"PlaypointFaucet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Faucet.sol\":{\"keccak256\":\"0xdb257d041630cf7412ce84798e0ec7ae63979ad6581853cad2325bb68a983a16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a498080bf4f5cd388eafa10c8fbb657b04bf238f46866529277c700d0e739617\",\"dweb:/ipfs/QmQCkCPKaewKXkFc9fjWyhDdvwLW861G7ubupcwtbX3fu6\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/Faucet.sol:PlaypointFaucet",
								"label": "PPTTToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)163"
							},
							{
								"astId": 9,
								"contract": "contracts/Faucet.sol:PlaypointFaucet",
								"label": "users",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint8)"
							},
							{
								"astId": 11,
								"contract": "contracts/Faucet.sol:PlaypointFaucet",
								"label": "locked",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)163": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint8)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint8)",
								"numberOfBytes": "32",
								"value": "t_uint8"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Faucet.sol": {
				"ast": {
					"absolutePath": "contracts/Faucet.sol",
					"exportedSymbols": {
						"IERC20": [
							163
						],
						"PlaypointFaucet": [
							85
						]
					},
					"id": 86,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 86,
							"sourceUnit": 164,
							"src": "56:109:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 85,
							"linearizedBaseContracts": [
								85
							],
							"name": "PlaypointFaucet",
							"nameLocation": "176:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "7517eae9",
									"id": 5,
									"mutability": "mutable",
									"name": "PPTTToken",
									"nameLocation": "211:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 85,
									"src": "197:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$163",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 4,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 163,
											"src": "197:6:0"
										},
										"referencedDeclaration": 163,
										"src": "197:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$163",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a87430ba",
									"id": 9,
									"mutability": "mutable",
									"name": "users",
									"nameLocation": "259:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 85,
									"src": "226:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
										"typeString": "mapping(address => uint8)"
									},
									"typeName": {
										"id": 8,
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "234:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "226:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
											"typeString": "mapping(address => uint8)"
										},
										"valueType": {
											"id": 7,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "245:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "locked",
									"nameLocation": "284:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 85,
									"src": "270:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 10,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "270:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "324:43:0",
										"statements": [
											{
												"expression": {
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 16,
														"name": "PPTTToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "334:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$163",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 18,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "353:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 17,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "346:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$163_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 19,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "346:14:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$163",
															"typeString": "contract IERC20"
														}
													},
													"src": "334:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$163",
														"typeString": "contract IERC20"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "334:26:0"
											}
										]
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "317:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "309:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:16:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "324:0:0"
									},
									"scope": 85,
									"src": "297:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "400:91:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "418:7:0",
															"subExpression": {
																"id": 26,
																"name": "locked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "419:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "410:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "410:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "410:16:0"
											},
											{
												"expression": {
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 30,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "436:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 31,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "445:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "436:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "436:13:0"
											},
											{
												"id": 34,
												"nodeType": "PlaceholderStatement",
												"src": "459:1:0"
											},
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "470:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "479:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "470:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "470:14:0"
											}
										]
									},
									"id": 40,
									"name": "reentrancyGuard",
									"nameLocation": "382:15:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "397:2:0"
									},
									"src": "373:118:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 54,
										"nodeType": "Block",
										"src": "535:102:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 45,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "553:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
																		"typeString": "mapping(address => uint8)"
																	}
																},
																"id": 47,
																"indexExpression": {
																	"id": 46,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "559:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "553:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "31",
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "569:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "553:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "557365722068617320616c72656164792072657175657374206c696d69746564205050545420546f6b656e21",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "572:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e69aec3b07c9f4436b9bee634efc8f1f0cffa7f182b71296a81c4d2d46a5619b",
																"typeString": "literal_string \"User has already request limited PPTT Token!\""
															},
															"value": "User has already request limited PPTT Token!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e69aec3b07c9f4436b9bee634efc8f1f0cffa7f182b71296a81c4d2d46a5619b",
																"typeString": "literal_string \"User has already request limited PPTT Token!\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "545:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "545:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "545:74:0"
											},
											{
												"id": 53,
												"nodeType": "PlaceholderStatement",
												"src": "629:1:0"
											}
										]
									},
									"id": 55,
									"name": "_checkRequest",
									"nameLocation": "506:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "528:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "520:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "519:15:0"
									},
									"src": "497:140:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "730:122:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 69,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "759:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "759:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "353030303030303030303030303030303030303030303030",
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "771:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_500000000000000000000000_by_1",
																"typeString": "int_const 500000000000000000000000"
															},
															"value": "500000000000000000000000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_500000000000000000000000_by_1",
																"typeString": "int_const 500000000000000000000000"
															}
														],
														"expression": {
															"id": 66,
															"name": "PPTTToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "740:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$163",
																"typeString": "contract IERC20"
															}
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 130,
														"src": "740:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "740:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "740:56:0"
											},
											{
												"expression": {
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 74,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "806:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
																"typeString": "mapping(address => uint8)"
															}
														},
														"id": 77,
														"indexExpression": {
															"expression": {
																"id": 75,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "812:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "812:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "806:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "826:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "806:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "806:21:0"
											},
											{
												"expression": {
													"hexValue": "31",
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "844:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"functionReturnParameters": 65,
												"id": 82,
												"nodeType": "Return",
												"src": "837:8:0"
											}
										]
									},
									"functionSelector": "44e83453",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 58,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "680:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "680:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 60,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "_checkRequest",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 55,
												"src": "666:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "666:25:0"
										},
										{
											"id": 62,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 61,
												"name": "reentrancyGuard",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "692:15:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "692:15:0"
										}
									],
									"name": "requestPPTT",
									"nameLocation": "652:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "663:2:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "724:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 63,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "724:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "723:7:0"
									},
									"scope": 85,
									"src": "643:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 86,
							"src": "167:687:0",
							"usedErrors": []
						}
					],
					"src": "32:822:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							163
						]
					},
					"id": 164,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 87,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 88,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 163,
							"linearizedBaseContracts": [
								163
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 97,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 98,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 106,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 163,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 163,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 163,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 163,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 163,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 159,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 163,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 164,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			}
		}
	}
}